<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>